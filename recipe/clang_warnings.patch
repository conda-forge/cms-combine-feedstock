diff --git a/src/AtlasPdfs.cxx b/src/AtlasPdfs.cxx
index abb70dc2..cf599a1c 100644
--- a/src/AtlasPdfs.cxx
+++ b/src/AtlasPdfs.cxx
@@ -1640,9 +1640,6 @@ void RooStarMomentMorph::CacheElem::calculateFractions(const RooStarMomentMorph&
     {
       //int nObs=self._obsList.getSize();
       
-      // loop over parList
-      int nnuis=0;
-      
       // zero all fractions
       int nPdf=self._pdfList.getSize();	
       for (Int_t i=0; i<3*nPdf; ++i) {
@@ -1662,9 +1659,6 @@ void RooStarMomentMorph::CacheElem::calculateFractions(const RooStarMomentMorph&
 	double mlo=self._nref[imin];
 	double mhi=self._nref[imax];
 	
-	// get reference for this obs
-	nnuis+=self._nnuis[j];
-	       
 	double mfrac = (imax>imin) ? (mhi-m0)/(mhi-mlo) : (mlo-m0)/(mhi-mlo);
 	if (mfrac> 1.) mfrac= 1.;
 	if (mfrac<-1.) mfrac=-1.;
diff --git a/src/CascadeMinimizer.cc b/src/CascadeMinimizer.cc
index d5630b1e..d73ed16b 100644
--- a/src/CascadeMinimizer.cc
+++ b/src/CascadeMinimizer.cc
@@ -572,19 +572,6 @@ bool CascadeMinimizer::multipleMinimize(const RooArgSet &reallyCleanParameters,
     //if (mode!=0) utils::reorderCombinations(myCombos,pdfSizes,bestIndeces);
     utils::reorderCombinations(myCombos,pdfSizes,bestIndeces);
 
-    int numberOfCombinations = 1;
-    if (mode==1 || mode==0) numberOfCombinations=myCombos.size();
-
-    else {
-    	for (int i=0;i<numIndeces;i++){
-	 int nokpdfs=0;
-      	 for (int j=0;j<pdfSizes[i];j++){
-	   nokpdfs+=contributingIndeces[i][j];
-         }
-	 numberOfCombinations*=nokpdfs;
-	}
-    }
-
     std::vector<std::vector<int> >::iterator my_it = myCombos.begin();
     if (mode!=0) my_it++; // already did the best fit case
   
